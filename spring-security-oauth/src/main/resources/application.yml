# server config
server:
  port: 8080

# spring application config
spring:
  datasource:
    data: classpath:schema-h2.sql # Spring Session 테이블 스키마 적용
  jpa:
    show-sql: true # JPA로 생성되는 쿼리 확인
    hibernate:
      ddl-auto: create # 프로젝트 시작시 테이블 생성
  h2:
    console:
      enabled: true
      path: /h2-console # h2 db 웹 클라이언트 접속 url
  devtools:
    livereload:
      enabled: true # 정적파일들의 실시간 갱신

# log config
logging:
  level:
    org.hibernate.type: trace # JPA로 생성되는 쿼리의 파라미터 값 확인

# OAuth config
google :
  client :
    clientId :
    clientSecret:
    accessTokenUri: https://accounts.google.com/o/oauth2/token
    userAuthorizationUri: https://accounts.google.com/o/oauth2/auth
    clientAuthenticationScheme: form
    scope: email, profile
  resource:
    userInfoUri: https://www.googleapis.com/oauth2/v2/userinfo

 facebook :
   client :
     clientId :
     clientSecret:
     accessTokenUri: https://graph.facebook.com/oauth/access_token
     userAuthorizationUri: https://www.facebook.com/dialog/oauth?display=popup
     tokenName: oauth_token
     authenticationScheme: query
     clientAuthenticationScheme: form
     scope: email
   resource:
     userInfoUri: https://graph.facebook.com/me?fields=id,name,email,link

 kakao :
   client :
     clientId :
     accessTokenUri: https://kauth.kakao.com/oauth/token
     userAuthorizationUri: https://kauth.kakao.com/oauth/authorize
   resource:
     userInfoUri: https://kapi.kakao.com/v1/user/me

 twitter:
   clientId:
   clientSecret:
   callbackUri: http://localhost:8080/twitter/complete